# Nome do arquivo de cobertura
COVERAGE_FILE=coverage.out
COVERAGE_HTML=coverage.html
COVERAGE_THRESHOLD=80.0 # Defina a cobertura m√≠nima aceit√°vel (exemplo: 80%)

# Gera a cobertura de testes
test:
	@echo "üîç Executando testes..."
	@go test -coverprofile=$(COVERAGE_FILE) ./...

# Exibe a cobertura no terminal
coverage:
	@echo "üìä Exibindo cobertura de testes..."
	@go tool cover -func=$(COVERAGE_FILE)

# Verifica se a cobertura atinge o m√≠nimo esperado
check-coverage: test coverage
	@COVERAGE=$$(go tool cover -func=$(COVERAGE_FILE) | grep total | awk '{print substr($$3, 1, length($$3)-1)}'); \
	echo "‚úÖ Cobertura atual: $$COVERAGE%"; \
	COVERAGE_NUM=$$(echo $$COVERAGE | awk '{print ($$1+0)}'); \
	if [ $$(echo "$$COVERAGE_NUM < $(COVERAGE_THRESHOLD)" | bc -l) -eq 1 ]; then \
		echo "‚ùå Cobertura abaixo do esperado ($(COVERAGE_THRESHOLD)%)"; \
		exit 1; \
	else \
		echo "üéâ Cobertura dentro do esperado!"; \
	fi

# Gera um relat√≥rio HTML da cobertura
coverage-html: test
	@echo "üåê Gerando relat√≥rio HTML de cobertura..."
	@go tool cover -html=$(COVERAGE_FILE) -o $(COVERAGE_HTML)
	@echo "üìÇ Abra o arquivo $(COVERAGE_HTML) no navegador."

# Limpa arquivos tempor√°rios
clean:
	@echo "üßπ Limpando arquivos de cobertura..."
	@rm -f $(COVERAGE_FILE) $(COVERAGE_HTML)
